# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR MiniOS Linux
# This file is distributed under the same license as the minios-installer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: minios-installer 2.3\n"
"Report-Msgid-Bugs-To: support@minios.dev\n"
"POT-Creation-Date: 2025-08-17 15:42+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: lib/format_utils.py:45 lib/format_utils.py:47 lib/format_utils.py:49
msgid "Failed to format "
msgstr ""

#: lib/format_utils.py:51
msgid "Failed to format EFI "
msgstr ""

#: lib/bootloader_utils.py:45 lib/main_installer.py:622 lib/copy_utils.py:61
#: lib/copy_utils.py:62
msgid "Installation canceled by user."
msgstr ""

#: lib/bootloader_utils.py:49
#, python-brace-format
msgid "Entering bootloader directory: {boot_dir}"
msgstr ""

#: lib/bootloader_utils.py:52
msgid "Preparing bootloader installation..."
msgstr ""

#: lib/bootloader_utils.py:61
msgid "Installing EXTLINUX bootloader..."
msgstr ""

#: lib/bootloader_utils.py:76
msgid "Remounted boot directory with exec."
msgstr ""

#: lib/bootloader_utils.py:78
msgid "Failed to remount boot directory; proceeding."
msgstr ""

#: lib/bootloader_utils.py:80
msgid "Made extlinux executable."
msgstr ""

#: lib/bootloader_utils.py:88
#, python-brace-format
msgid "Copied extlinux to fallback: {fallback_name}"
msgstr ""

#: lib/bootloader_utils.py:106
#, python-brace-format
msgid "extlinux install failed (code {code}), trying fallback in /tmp..."
msgstr ""

#: lib/bootloader_utils.py:121
#, python-brace-format
msgid "Error installing boot loader (fallback code {code})."
msgstr ""

#: lib/bootloader_utils.py:124
msgid "Boot loader installation succeeded via fallback."
msgstr ""

#: lib/bootloader_utils.py:126
#, python-brace-format
msgid "Ran extlinux installer (code {code})."
msgstr ""

#: lib/bootloader_utils.py:138
msgid "Removed fallback binary: extlinux.exe."
msgstr ""

#: lib/bootloader_utils.py:142
msgid "EXTLINUX bootloader installation completed"
msgstr ""

#: lib/bootloader_utils.py:154
#, python-brace-format
msgid "Wrote MBR to {device}."
msgstr ""

#: lib/bootloader_utils.py:164
#, python-brace-format
msgid "Error: Could not extract partition number from {primary}"
msgstr ""

#: lib/bootloader_utils.py:184
#, python-brace-format
msgid "Set partition active: {primary}"
msgstr ""

#: lib/bootloader_utils.py:186
#, python-brace-format
msgid "Error: sfdisk returned exit code {code}"
msgstr ""

#: lib/bootloader_utils.py:189
msgid "Error: sfdisk command timed out"
msgstr ""

#: lib/bootloader_utils.py:191
msgid "Error: sfdisk not found - install util-linux package"
msgstr ""

#: lib/bootloader_utils.py:193
#, python-brace-format
msgid "Error running sfdisk: {error}"
msgstr ""

#: lib/mount_utils.py:29
msgid "Destination "
msgstr ""

#: lib/mount_utils.py:29
msgid " is already mounted."
msgstr ""

#: lib/mount_utils.py:38
msgid "Could not determine filesystem type of "
msgstr ""

#: lib/mount_utils.py:42
msgid "Failed to mount "
msgstr ""

#: lib/main_installer.py:170
msgid "USB Device"
msgstr ""

#: lib/main_installer.py:172
msgid "SATA Drive"
msgstr ""

#: lib/main_installer.py:174
msgid "IDE Drive"
msgstr ""

#: lib/main_installer.py:176
msgid "NVMe SSD"
msgstr ""

#: lib/main_installer.py:178
msgid "MMC/SD Card"
msgstr ""

#: lib/main_installer.py:180
msgid "Hard Disk Drive"
msgstr ""

#: lib/main_installer.py:220
msgid "Warning: This appears to be a system disk"
msgstr ""

#: lib/main_installer.py:224
msgid "Warning: This disk has mounted partitions"
msgstr ""

#: lib/main_installer.py:257
msgid "Please select a target disk and filesystem:"
msgstr ""

#: lib/main_installer.py:266
msgid "Select Target Disk:"
msgstr ""

#: lib/main_installer.py:283
msgid "Select Filesystem Type:"
msgstr ""

#: lib/main_installer.py:297
msgid ""
"<b>ext4</b> (best choice)\n"
"  + Stable and has journaling.\n"
"  + Fast performance with large-file support.\n"
"  - Not compatible with Windows, Mac and most hardware devices.\n"
"\n"
"<b>ext2</b>\n"
"  + Minimal write overhead preserves flash lifespan.\n"
"  + Simple structure is easy to recover.\n"
"  - No journaling increases risk of data loss if unplugged.\n"
"  - Not compatible with Windows, Mac and most hardware devices.\n"
"\n"
"<b>btrfs</b>\n"
"  + Snapshots enable easy rollback.\n"
"  + Built-in compression saves space.\n"
"  - Complex configuration may be needed.\n"
"  - Additional metadata can slow transfers on USB drives.\n"
"  - Not compatible with Windows, Mac and most hardware devices.\n"
"\n"
"<b>FAT32</b>\n"
"  + Universally readable by Windows, macOS, and Linux.\n"
"  + No extra drivers or setup needed.\n"
"  - 4 GiB file size limit.\n"
"  - No journaling increases risk of data loss if unplugged.\n"
"  - FUSE-based persistence reduce performance.\n"
"\n"
"<b>NTFS</b>\n"
"  + Supports large files and has journaling.\n"
"  + Native Windows support; fast read/write in Linux via ntfs3.\n"
"  - Not compatible with Mac and most hardware devices.\n"
"  - FUSE-based persistence reduce performance.\n"
"\n"
msgstr ""

#: lib/main_installer.py:328
msgid "Boot Menu Language:"
msgstr ""

#: lib/main_installer.py:338
msgid "Multilingual menu"
msgstr ""

#: lib/main_installer.py:360
msgid "Install"
msgstr ""

#: lib/main_installer.py:370
msgid "Configure MiniOS before installation"
msgstr ""

#: lib/main_installer.py:438 lib/main_installer.py:466
msgid "WARNING: This action is irreversible!"
msgstr ""

#: lib/main_installer.py:439 lib/main_installer.py:481
msgid "Device information:"
msgstr ""

#: lib/main_installer.py:440 lib/main_installer.py:508
msgid "What will be erased:"
msgstr ""

#: lib/main_installer.py:448
msgid "selected device"
msgstr ""

#: lib/main_installer.py:520
msgid "Files, documents, and applications"
msgstr ""

#: lib/main_installer.py:521
msgid "Operating systems"
msgstr ""

#: lib/main_installer.py:522
msgid "Personal data and settings"
msgstr ""

#: lib/main_installer.py:523
msgid "All partitions and file systems"
msgstr ""

#: lib/main_installer.py:550
msgid "Go Back"
msgstr ""

#: lib/main_installer.py:555
msgid "Continue"
msgstr ""

#: lib/main_installer.py:572
msgid "Preparing to install..."
msgstr ""

#: lib/main_installer.py:582 lib/main_installer.py:612
msgid "Show Log"
msgstr ""

#: lib/main_installer.py:587
msgid "Cancel"
msgstr ""

#: lib/main_installer.py:608
msgid "Hide Log"
msgstr ""

#: lib/main_installer.py:621
msgid "Installation canceled."
msgstr ""

#: lib/main_installer.py:628
msgid "Restart Installation"
msgstr ""

#: lib/main_installer.py:676 lib/main_installer.py:758
msgid "Unmounting disk..."
msgstr ""

#: lib/main_installer.py:677
msgid "Erasing disk..."
msgstr ""

#: lib/main_installer.py:678
msgid "Partitioning disk..."
msgstr ""

#: lib/main_installer.py:679
msgid "Formatting partitions..."
msgstr ""

#: lib/main_installer.py:680
msgid "Mounting partition..."
msgstr ""

#: lib/main_installer.py:694
msgid "Error at step: "
msgstr ""

#: lib/main_installer.py:696 lib/main_installer.py:710
#: lib/main_installer.py:735 lib/main_installer.py:754
#: lib/main_installer.py:768
msgid "Installation failed: "
msgstr ""

#: lib/main_installer.py:700
msgid "Mounting EFI partition..."
msgstr ""

#: lib/main_installer.py:708
msgid "Error mounting EFI partition:"
msgstr ""

#: lib/main_installer.py:714
msgid "Copying files..."
msgstr ""

#: lib/main_installer.py:718
msgid "Cannot find MiniOS image."
msgstr ""

#: lib/main_installer.py:723
msgid "Copying EFI files to root..."
msgstr ""

#: lib/main_installer.py:726
msgid "Copying EFI files to ESP..."
msgstr ""

#: lib/main_installer.py:733
msgid "Error during file copy:"
msgstr ""

#: lib/main_installer.py:739
msgid "Setting up bootloader..."
msgstr ""

#: lib/main_installer.py:752
msgid "Error setting up bootloader:"
msgstr ""

#: lib/main_installer.py:766
msgid "Error during unmount:"
msgstr ""

#: lib/main_installer.py:770
msgid "Installation complete!"
msgstr ""

#: lib/main_installer.py:783
msgid "Installation Error"
msgstr ""

#: lib/main_installer.py:801
msgid "Config file not found"
msgstr ""

#: lib/main_installer.py:803
msgid "Standard config file not found at {}."
msgstr ""

#: lib/main_installer.py:822
msgid "Launch Error"
msgstr ""

#: lib/main_installer.py:849
msgid "Root Privileges Required"
msgstr ""

#: lib/main_installer.py:851
msgid "This installer must be run as root."
msgstr ""

#: lib/disk_utils.py:87
msgid "Failed to retrieve disk list."
msgstr ""

#: lib/disk_utils.py:96
msgid "Failed to detect live media device"
msgstr ""

#: lib/disk_utils.py:101
msgid "Failed to detect root disk"
msgstr ""

#: lib/disk_utils.py:168
msgid "Failed to get disk size."
msgstr ""

#: lib/disk_utils.py:175
msgid "Could not parse disk size."
msgstr ""

#: lib/disk_utils.py:187
msgid "Failed to set GPT label on "
msgstr ""

#: lib/disk_utils.py:191 lib/disk_utils.py:205 lib/disk_utils.py:218
msgid "Failed to create primary partition on "
msgstr ""

#: lib/disk_utils.py:195
msgid "Failed to create EFI partition on "
msgstr ""

#: lib/disk_utils.py:198 lib/disk_utils.py:212
msgid "Failed to set boot flag."
msgstr ""

#: lib/disk_utils.py:201 lib/disk_utils.py:215
msgid "Failed to set MSDOS label on "
msgstr ""

#: lib/disk_utils.py:209
msgid "Failed to create second partition on "
msgstr ""

#: lib/disk_utils.py:232
msgid "Failed to erase "
msgstr ""

#: lib/copy_utils.py:71
msgid "Copying MiniOS files: "
msgstr ""

#: lib/copy_utils.py:73
msgid "Copied file: "
msgstr ""

#: lib/copy_utils.py:80
msgid "Created directory: "
msgstr ""

#: lib/copy_utils.py:104
msgid "Copied EFI file: "
msgstr ""

#: lib/copy_utils.py:246
#, python-brace-format
msgid "Warning: No translations found for {lang}, using English fallback"
msgstr ""

#: lib/copy_utils.py:252
msgid "Error: grub.template.cfg template not found"
msgstr ""

#: lib/copy_utils.py:292
#, python-brace-format
msgid "Using localized theme: {theme}"
msgstr ""

#: lib/copy_utils.py:294
#, python-brace-format
msgid "Localized theme not found for {lang}, using default"
msgstr ""

#: lib/copy_utils.py:300
#, python-brace-format
msgid "Generated localized GRUB config for {lang}"
msgstr ""

#: lib/copy_utils.py:304
#, python-brace-format
msgid "Error generating localized GRUB config: {error}"
msgstr ""

#: lib/copy_utils.py:317
msgid "SYSLINUX configuration already exists"
msgstr ""

#: lib/copy_utils.py:319
msgid "Warning: SYSLINUX configuration not found"
msgstr ""

#: lib/copy_utils.py:331
msgid "GRUB directory not found, skipping GRUB boot menu configuration"
msgstr ""

#: lib/copy_utils.py:339
msgid "multilingual menu"
msgstr ""

#: lib/copy_utils.py:343
#, python-brace-format
msgid "Applied {config} GRUB boot menu from {source}"
msgstr ""

#: lib/copy_utils.py:346
#, python-brace-format
msgid ""
"Warning: {config} configuration file not found, keeping original grub.cfg"
msgstr ""

#: lib/copy_utils.py:352
#, python-brace-format
msgid "Generating localized GRUB menu for language: {lang}"
msgstr ""

#: lib/copy_utils.py:355
#, python-brace-format
msgid "Applied {lang} GRUB boot menu"
msgstr ""

#: lib/copy_utils.py:358
#, python-brace-format
msgid "Failed to generate {lang} config, falling back to template"
msgstr ""

#: lib/copy_utils.py:362
msgid "Applied template GRUB boot menu as fallback"
msgstr ""

#: lib/copy_utils.py:364
msgid "Warning: No fallback configuration available, keeping original grub.cfg"
msgstr ""
