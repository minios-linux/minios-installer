# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR MiniOS Linux
# This file is distributed under the same license as the minios-installer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: minios-installer 2.1\n"
"Report-Msgid-Bugs-To: crims0n@minios.dev\n"
"POT-Creation-Date: 2025-07-07 20:49+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: lib/copy_utils.py:60 lib/copy_utils.py:61 lib/bootloader_utils.py:33
#: lib/main_installer.py:377
msgid "Installation canceled by user."
msgstr ""

#: lib/copy_utils.py:70
msgid "Copying MiniOS files: "
msgstr ""

#: lib/copy_utils.py:72
msgid "Copied file: "
msgstr ""

#: lib/copy_utils.py:79
msgid "Created directory: "
msgstr ""

#: lib/copy_utils.py:97
msgid "Copied EFI file: "
msgstr ""

#: lib/mount_utils.py:29
msgid "Destination "
msgstr ""

#: lib/mount_utils.py:29
msgid " is already mounted."
msgstr ""

#: lib/mount_utils.py:38
msgid "Could not determine filesystem type of "
msgstr ""

#: lib/mount_utils.py:42
msgid "Failed to mount "
msgstr ""

#: lib/bootloader_utils.py:37
#, python-brace-format
msgid "Entering bootloader directory: {boot_dir}"
msgstr ""

#: lib/bootloader_utils.py:40
msgid "Setting up bootloader."
msgstr ""

#: lib/bootloader_utils.py:54
msgid "Remounted boot directory with exec."
msgstr ""

#: lib/bootloader_utils.py:56
msgid "Failed to remount boot directory; proceeding."
msgstr ""

#: lib/bootloader_utils.py:58
msgid "Made extlinux executable."
msgstr ""

#: lib/bootloader_utils.py:66
#, python-brace-format
msgid "Copied extlinux to fallback: {fallback_name}"
msgstr ""

#: lib/bootloader_utils.py:84
#, python-brace-format
msgid "extlinux install failed (code {code}), trying fallback in /tmp..."
msgstr ""

#: lib/bootloader_utils.py:99
#, python-brace-format
msgid "Error installing boot loader (fallback code {code})."
msgstr ""

#: lib/bootloader_utils.py:102
msgid "Boot loader installation succeeded via fallback."
msgstr ""

#: lib/bootloader_utils.py:104
#, python-brace-format
msgid "Ran extlinux installer (code {code})."
msgstr ""

#: lib/bootloader_utils.py:116
msgid "Removed fallback binary: extlinux.exe."
msgstr ""

#: lib/bootloader_utils.py:130
#, python-brace-format
msgid "Wrote MBR to {device}."
msgstr ""

#: lib/bootloader_utils.py:173
#, python-brace-format
msgid "Set partition active: {primary}."
msgstr ""

#: lib/main_installer.py:127
msgid "Please select a target disk and filesystem:"
msgstr ""

#: lib/main_installer.py:136
msgid "Select Target Disk:"
msgstr ""

#: lib/main_installer.py:166
msgid "Select Filesystem Type:"
msgstr ""

#: lib/main_installer.py:180
msgid ""
"<b>ext4</b> (best choice)\n"
"  + Stable and has journaling.\n"
"  + Fast performance with large-file support.\n"
"  - Not compatible with Windows, Mac and most hardware devices.\n"
"\n"
"<b>ext2</b>\n"
"  + Minimal write overhead preserves flash lifespan.\n"
"  + Simple structure is easy to recover.\n"
"  - No journaling increases risk of data loss if unplugged.\n"
"  - Not compatible with Windows, Mac and most hardware devices.\n"
"\n"
"<b>btrfs</b>\n"
"  + Snapshots enable easy rollback.\n"
"  + Built-in compression saves space.\n"
"  - Complex configuration may be needed.\n"
"  - Additional metadata can slow transfers on USB drives.\n"
"  - Not compatible with Windows, Mac and most hardware devices.\n"
"\n"
"<b>FAT32</b>\n"
"  + Universally readable by Windows, macOS, and Linux.\n"
"  + No extra drivers or setup needed.\n"
"  - 4 GiB file size limit.\n"
"  - No journaling increases risk of data loss if unplugged.\n"
"  - FUSE-based persistence reduce performance.\n"
"\n"
"<b>NTFS</b>\n"
"  + Supports large files and has journaling.\n"
"  + Native Windows support; fast read/write in Linux via ntfs3.\n"
"  - Not compatible with Mac and most hardware devices.\n"
"  - FUSE-based persistence reduce performance.\n"
"\n"
msgstr ""

#: lib/main_installer.py:212
msgid "Install"
msgstr ""

#: lib/main_installer.py:222
msgid "Configure MiniOS before installation"
msgstr ""

#: lib/main_installer.py:282
msgid "All data on the selected device will be lost!"
msgstr ""

#: lib/main_installer.py:289
msgid "selected device"
msgstr ""

#: lib/main_installer.py:306
msgid "Go Back"
msgstr ""

#: lib/main_installer.py:311
msgid "Continue"
msgstr ""

#: lib/main_installer.py:327
msgid "Preparing to install..."
msgstr ""

#: lib/main_installer.py:337 lib/main_installer.py:367
msgid "Show Log"
msgstr ""

#: lib/main_installer.py:342
msgid "Cancel"
msgstr ""

#: lib/main_installer.py:363
msgid "Hide Log"
msgstr ""

#: lib/main_installer.py:376
msgid "Installation canceled."
msgstr ""

#: lib/main_installer.py:418 lib/main_installer.py:500
msgid "Unmounting disk..."
msgstr ""

#: lib/main_installer.py:419
msgid "Erasing disk..."
msgstr ""

#: lib/main_installer.py:420
msgid "Partitioning disk..."
msgstr ""

#: lib/main_installer.py:421
msgid "Formatting partitions..."
msgstr ""

#: lib/main_installer.py:422
msgid "Mounting partition..."
msgstr ""

#: lib/main_installer.py:436
msgid "Error at step: "
msgstr ""

#: lib/main_installer.py:438 lib/main_installer.py:452
#: lib/main_installer.py:477 lib/main_installer.py:496
#: lib/main_installer.py:510
msgid "Installation failed: "
msgstr ""

#: lib/main_installer.py:442
msgid "Mounting EFI partition..."
msgstr ""

#: lib/main_installer.py:450
msgid "Error mounting EFI partition:"
msgstr ""

#: lib/main_installer.py:456
msgid "Copying files..."
msgstr ""

#: lib/main_installer.py:460
msgid "Cannot find MiniOS image."
msgstr ""

#: lib/main_installer.py:465
msgid "Copying EFI files to root..."
msgstr ""

#: lib/main_installer.py:468
msgid "Copying EFI files to ESP..."
msgstr ""

#: lib/main_installer.py:475
msgid "Error during file copy:"
msgstr ""

#: lib/main_installer.py:481
msgid "Setting up bootloader..."
msgstr ""

#: lib/main_installer.py:494
msgid "Error setting up bootloader:"
msgstr ""

#: lib/main_installer.py:508
msgid "Error during unmount:"
msgstr ""

#: lib/main_installer.py:512
msgid "Installation complete!"
msgstr ""

#: lib/main_installer.py:523
msgid "Installation Error"
msgstr ""

#: lib/main_installer.py:541
msgid "Config file not found"
msgstr ""

#: lib/main_installer.py:543
#, python-brace-format
msgid "Standard config file not found at {src_config}."
msgstr ""

#: lib/main_installer.py:562
msgid "Launch Error"
msgstr ""

#: lib/main_installer.py:589
msgid "Root Privileges Required"
msgstr ""

#: lib/main_installer.py:591
msgid "This installer must be run as root."
msgstr ""

#: lib/disk_utils.py:33
msgid "Failed to retrieve disk list."
msgstr ""

#: lib/disk_utils.py:42
msgid "Failed to detect live media device"
msgstr ""

#: lib/disk_utils.py:47
msgid "Failed to detect root disk"
msgstr ""

#: lib/disk_utils.py:114
msgid "Failed to get disk size."
msgstr ""

#: lib/disk_utils.py:121
msgid "Could not parse disk size."
msgstr ""

#: lib/disk_utils.py:133
msgid "Failed to set GPT label on "
msgstr ""

#: lib/disk_utils.py:137 lib/disk_utils.py:151 lib/disk_utils.py:164
msgid "Failed to create primary partition on "
msgstr ""

#: lib/disk_utils.py:141
msgid "Failed to create EFI partition on "
msgstr ""

#: lib/disk_utils.py:144 lib/disk_utils.py:158
msgid "Failed to set boot flag."
msgstr ""

#: lib/disk_utils.py:147 lib/disk_utils.py:161
msgid "Failed to set MSDOS label on "
msgstr ""

#: lib/disk_utils.py:155
msgid "Failed to create second partition on "
msgstr ""

#: lib/disk_utils.py:178
msgid "Failed to erase "
msgstr ""

#: lib/format_utils.py:45 lib/format_utils.py:47 lib/format_utils.py:49
msgid "Failed to format "
msgstr ""

#: lib/format_utils.py:51
msgid "Failed to format EFI "
msgstr ""
