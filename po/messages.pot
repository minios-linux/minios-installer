# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR MiniOS Linux
# This file is distributed under the same license as the minios-installer package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: minios-installer 2.3\n"
"Report-Msgid-Bugs-To: support@minios.dev\n"
"POT-Creation-Date: 2025-08-15 15:22+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: lib/bootloader_utils_syslinux.py:29
msgid "Installing SYSLINUX bootloader..."
msgstr ""

#: lib/bootloader_utils_syslinux.py:44 lib/bootloader_utils.py:280
msgid "Remounted boot directory with exec."
msgstr ""

#: lib/bootloader_utils_syslinux.py:46 lib/bootloader_utils.py:282
msgid "Failed to remount boot directory; proceeding."
msgstr ""

#: lib/bootloader_utils_syslinux.py:48 lib/bootloader_utils.py:284
msgid "Made extlinux executable."
msgstr ""

#: lib/bootloader_utils_syslinux.py:56
#, python-brace-format
msgid "Copied syslinux to fallback: {fallback_name}"
msgstr ""

#: lib/bootloader_utils_syslinux.py:74
#, python-brace-format
msgid "syslinux install failed (code {code}), trying fallback in /tmp..."
msgstr ""

#: lib/bootloader_utils_syslinux.py:89 lib/bootloader_utils.py:325
#, python-brace-format
msgid "Error installing boot loader (fallback code {code})."
msgstr ""

#: lib/bootloader_utils_syslinux.py:92 lib/bootloader_utils.py:328
msgid "Boot loader installation succeeded via fallback."
msgstr ""

#: lib/bootloader_utils_syslinux.py:94
#, python-brace-format
msgid "Ran syslinux installer (code {code})."
msgstr ""

#: lib/bootloader_utils_syslinux.py:109
msgid "Removed fallback binary: syslinux.exe."
msgstr ""

#: lib/bootloader_utils_syslinux.py:113
msgid "SYSLINUX bootloader installation completed"
msgstr ""

#: lib/format_utils.py:45 lib/format_utils.py:47 lib/format_utils.py:49
msgid "Failed to format "
msgstr ""

#: lib/format_utils.py:51
msgid "Failed to format EFI "
msgstr ""

#: lib/bootloader_utils.py:73
msgid "GRUB - Modern bootloader with advanced features"
msgstr ""

#: lib/bootloader_utils.py:74
msgid "SYSLINUX - Lightweight bootloader for legacy systems"
msgstr ""

#: lib/bootloader_utils.py:107 lib/main_installer.py:706 lib/copy_utils.py:61
#: lib/copy_utils.py:62
msgid "Installation canceled by user."
msgstr ""

#: lib/bootloader_utils.py:111
#, python-brace-format
msgid "Entering bootloader directory: {boot_dir}"
msgstr ""

#: lib/bootloader_utils.py:116
#, python-brace-format
msgid "Using user-selected bootloader: {type}"
msgstr ""

#: lib/bootloader_utils.py:119
#, python-brace-format
msgid "Auto-detected bootloader type: {type}"
msgstr ""

#: lib/bootloader_utils.py:126
#, python-brace-format
msgid "Selected bootloader not available, falling back to: {type}"
msgstr ""

#: lib/bootloader_utils.py:142
msgid "Installing GRUB bootloader..."
msgstr ""

#: lib/bootloader_utils.py:157
msgid "Using portable grub-bios-setup from image"
msgstr ""

#: lib/bootloader_utils.py:175
msgid "GRUB installed successfully using grub-bios-setup"
msgstr ""

#: lib/bootloader_utils.py:178
#, python-brace-format
msgid "grub-bios-setup failed (code {code}), trying manual installation..."
msgstr ""

#: lib/bootloader_utils.py:182
#, python-brace-format
msgid "grub-bios-setup failed with exception: {error}"
msgstr ""

#: lib/bootloader_utils.py:186
msgid "grub-bios-setup not found in image, using manual installation..."
msgstr ""

#: lib/bootloader_utils.py:189 lib/bootloader_utils.py:257
msgid "GRUB bootloader installation completed"
msgstr ""

#: lib/bootloader_utils.py:197
msgid "Performing manual GRUB installation..."
msgstr ""

#: lib/bootloader_utils.py:198
#, python-brace-format
msgid "Device: {device}, Primary partition: {primary}"
msgstr ""

#: lib/bootloader_utils.py:199
#, python-brace-format
msgid "GRUB directory: {grub_dir}"
msgstr ""

#: lib/bootloader_utils.py:205
#, python-brace-format
msgid "Installing boot.img (size: {size} bytes) to MBR"
msgstr ""

#: lib/bootloader_utils.py:210
msgid "Installed GRUB stage 1 (boot.img) to MBR"
msgstr ""

#: lib/bootloader_utils.py:219
msgid "Installed GRUB boot_hybrid.img to MBR as fallback"
msgstr ""

#: lib/bootloader_utils.py:221
#, python-brace-format
msgid "No GRUB boot images found in {dir}"
msgstr ""

#: lib/bootloader_utils.py:227
#, python-brace-format
msgid "Installing diskboot.img (size: {size} bytes) to partition"
msgstr ""

#: lib/bootloader_utils.py:233
msgid "Installed GRUB stage 1.5 (diskboot.img) to partition"
msgstr ""

#: lib/bootloader_utils.py:235
msgid "diskboot.img not found, skipping partition boot sector installation"
msgstr ""

#: lib/bootloader_utils.py:245
msgid "Installed core.img to boot gap"
msgstr ""

#: lib/bootloader_utils.py:247
#, python-brace-format
msgid "Warning: Failed to install core.img: {error}"
msgstr ""

#: lib/bootloader_utils.py:249
msgid "Warning: core.img not found in image - GRUB may not boot properly"
msgstr ""

#: lib/bootloader_utils.py:265
msgid "Installing EXTLINUX bootloader..."
msgstr ""

#: lib/bootloader_utils.py:292
#, python-brace-format
msgid "Copied extlinux to fallback: {fallback_name}"
msgstr ""

#: lib/bootloader_utils.py:310
#, python-brace-format
msgid "extlinux install failed (code {code}), trying fallback in /tmp..."
msgstr ""

#: lib/bootloader_utils.py:330
#, python-brace-format
msgid "Ran extlinux installer (code {code})."
msgstr ""

#: lib/bootloader_utils.py:342
msgid "Removed fallback binary: extlinux.exe."
msgstr ""

#: lib/bootloader_utils.py:346
msgid "EXTLINUX bootloader installation completed"
msgstr ""

#: lib/bootloader_utils.py:360
msgid "MBR signature OK (0x55AA)"
msgstr ""

#: lib/bootloader_utils.py:362
#, python-brace-format
msgid "Warning: MBR signature incorrect: {sig}"
msgstr ""

#: lib/bootloader_utils.py:366
msgid "GRUB signature found in MBR"
msgstr ""

#: lib/bootloader_utils.py:368
msgid "Warning: GRUB signature not found in MBR"
msgstr ""

#: lib/bootloader_utils.py:374
msgid "GRUB signature found in partition boot sector"
msgstr ""

#: lib/bootloader_utils.py:376
msgid "Warning: GRUB signature not found in partition boot sector"
msgstr ""

#: lib/bootloader_utils.py:379
#, python-brace-format
msgid "Warning: Failed to verify GRUB installation: {error}"
msgstr ""

#: lib/bootloader_utils.py:391
#, python-brace-format
msgid "Wrote MBR to {device}."
msgstr ""

#: lib/bootloader_utils.py:401
#, python-brace-format
msgid "Error: Could not extract partition number from {primary}"
msgstr ""

#: lib/bootloader_utils.py:421
#, python-brace-format
msgid "Set partition active: {primary}"
msgstr ""

#: lib/bootloader_utils.py:423
#, python-brace-format
msgid "Error: sfdisk returned exit code {code}"
msgstr ""

#: lib/bootloader_utils.py:426
msgid "Error: sfdisk command timed out"
msgstr ""

#: lib/bootloader_utils.py:428
msgid "Error: sfdisk not found - install util-linux package"
msgstr ""

#: lib/bootloader_utils.py:430
#, python-brace-format
msgid "Error running sfdisk: {error}"
msgstr ""

#: lib/mount_utils.py:29
msgid "Destination "
msgstr ""

#: lib/mount_utils.py:29
msgid " is already mounted."
msgstr ""

#: lib/mount_utils.py:38
msgid "Could not determine filesystem type of "
msgstr ""

#: lib/mount_utils.py:42
msgid "Failed to mount "
msgstr ""

#: lib/main_installer.py:171
msgid "USB Device"
msgstr ""

#: lib/main_installer.py:173
msgid "SATA Drive"
msgstr ""

#: lib/main_installer.py:175
msgid "IDE Drive"
msgstr ""

#: lib/main_installer.py:177
msgid "NVMe SSD"
msgstr ""

#: lib/main_installer.py:179
msgid "MMC/SD Card"
msgstr ""

#: lib/main_installer.py:181
msgid "Hard Disk Drive"
msgstr ""

#: lib/main_installer.py:221
msgid "Warning: This appears to be a system disk"
msgstr ""

#: lib/main_installer.py:225
msgid "Warning: This disk has mounted partitions"
msgstr ""

#: lib/main_installer.py:258
msgid "Please select a target disk and filesystem:"
msgstr ""

#: lib/main_installer.py:267
msgid "Select Target Disk:"
msgstr ""

#: lib/main_installer.py:284
msgid "Select Filesystem Type:"
msgstr ""

#: lib/main_installer.py:298
msgid ""
"<b>ext4</b> (best choice)\n"
"  + Stable and has journaling.\n"
"  + Fast performance with large-file support.\n"
"  - Not compatible with Windows, Mac and most hardware devices.\n"
"\n"
"<b>ext2</b>\n"
"  + Minimal write overhead preserves flash lifespan.\n"
"  + Simple structure is easy to recover.\n"
"  - No journaling increases risk of data loss if unplugged.\n"
"  - Not compatible with Windows, Mac and most hardware devices.\n"
"\n"
"<b>btrfs</b>\n"
"  + Snapshots enable easy rollback.\n"
"  + Built-in compression saves space.\n"
"  - Complex configuration may be needed.\n"
"  - Additional metadata can slow transfers on USB drives.\n"
"  - Not compatible with Windows, Mac and most hardware devices.\n"
"\n"
"<b>FAT32</b>\n"
"  + Universally readable by Windows, macOS, and Linux.\n"
"  + No extra drivers or setup needed.\n"
"  - 4 GiB file size limit.\n"
"  - No journaling increases risk of data loss if unplugged.\n"
"  - FUSE-based persistence reduce performance.\n"
"\n"
"<b>NTFS</b>\n"
"  + Supports large files and has journaling.\n"
"  + Native Windows support; fast read/write in Linux via ntfs3.\n"
"  - Not compatible with Mac and most hardware devices.\n"
"  - FUSE-based persistence reduce performance.\n"
"\n"
msgstr ""

#: lib/main_installer.py:332
msgid "GRUB Boot Menu Language:"
msgstr ""

#: lib/main_installer.py:342
msgid "Multilingual menu"
msgstr ""

#: lib/main_installer.py:364
msgid "Install"
msgstr ""

#: lib/main_installer.py:374
msgid "Configure MiniOS before installation"
msgstr ""

#: lib/main_installer.py:445
msgid "BIOS Bootloader:"
msgstr ""

#: lib/main_installer.py:476
msgid ""
"<b>GRUB</b>\n"
"  + Modern bootloader with advanced features.\n"
"  + Better compatibility with complex configurations.\n"
"  + Support for advanced boot scenarios.\n"
"  - May not work with Ventoy (requires GRUB2 mode).\n"
"  - May have issues with older systems (Debian 10, for example).\n"
"\n"
"<b>SYSLINUX</b>\n"
"  + Lightweight and fast bootloader.\n"
"  + Better compatibility with Ventoy and older systems.\n"
"  + Simple and reliable for basic setups.\n"
"  - Limited advanced features.\n"
"\n"
msgstr ""

#: lib/main_installer.py:497
msgid "This selection only affects BIOS boot. EFI systems always use GRUB."
msgstr ""

#: lib/main_installer.py:522 lib/main_installer.py:550
msgid "WARNING: This action is irreversible!"
msgstr ""

#: lib/main_installer.py:523 lib/main_installer.py:565
msgid "Device information:"
msgstr ""

#: lib/main_installer.py:524 lib/main_installer.py:592
msgid "What will be erased:"
msgstr ""

#: lib/main_installer.py:532
msgid "selected device"
msgstr ""

#: lib/main_installer.py:604
msgid "Files, documents, and applications"
msgstr ""

#: lib/main_installer.py:605
msgid "Operating systems"
msgstr ""

#: lib/main_installer.py:606
msgid "Personal data and settings"
msgstr ""

#: lib/main_installer.py:607
msgid "All partitions and file systems"
msgstr ""

#: lib/main_installer.py:634
msgid "Go Back"
msgstr ""

#: lib/main_installer.py:639
msgid "Continue"
msgstr ""

#: lib/main_installer.py:656
msgid "Preparing to install..."
msgstr ""

#: lib/main_installer.py:666 lib/main_installer.py:696
msgid "Show Log"
msgstr ""

#: lib/main_installer.py:671
msgid "Cancel"
msgstr ""

#: lib/main_installer.py:692
msgid "Hide Log"
msgstr ""

#: lib/main_installer.py:705
msgid "Installation canceled."
msgstr ""

#: lib/main_installer.py:712
msgid "Restart Installation"
msgstr ""

#: lib/main_installer.py:760 lib/main_installer.py:843
msgid "Unmounting disk..."
msgstr ""

#: lib/main_installer.py:761
msgid "Erasing disk..."
msgstr ""

#: lib/main_installer.py:762
msgid "Partitioning disk..."
msgstr ""

#: lib/main_installer.py:763
msgid "Formatting partitions..."
msgstr ""

#: lib/main_installer.py:764
msgid "Mounting partition..."
msgstr ""

#: lib/main_installer.py:778
msgid "Error at step: "
msgstr ""

#: lib/main_installer.py:780 lib/main_installer.py:794
#: lib/main_installer.py:819 lib/main_installer.py:839
#: lib/main_installer.py:853
msgid "Installation failed: "
msgstr ""

#: lib/main_installer.py:784
msgid "Mounting EFI partition..."
msgstr ""

#: lib/main_installer.py:792
msgid "Error mounting EFI partition:"
msgstr ""

#: lib/main_installer.py:798
msgid "Copying files..."
msgstr ""

#: lib/main_installer.py:802
msgid "Cannot find MiniOS image."
msgstr ""

#: lib/main_installer.py:807
msgid "Copying EFI files to root..."
msgstr ""

#: lib/main_installer.py:810
msgid "Copying EFI files to ESP..."
msgstr ""

#: lib/main_installer.py:817
msgid "Error during file copy:"
msgstr ""

#: lib/main_installer.py:823
msgid "Setting up bootloader..."
msgstr ""

#: lib/main_installer.py:837
msgid "Error setting up bootloader:"
msgstr ""

#: lib/main_installer.py:851
msgid "Error during unmount:"
msgstr ""

#: lib/main_installer.py:855
msgid "Installation complete!"
msgstr ""

#: lib/main_installer.py:868
msgid "Installation Error"
msgstr ""

#: lib/main_installer.py:886
msgid "Config file not found"
msgstr ""

#: lib/main_installer.py:888
msgid "Standard config file not found at {}."
msgstr ""

#: lib/main_installer.py:907
msgid "Launch Error"
msgstr ""

#: lib/main_installer.py:934
msgid "Root Privileges Required"
msgstr ""

#: lib/main_installer.py:936
msgid "This installer must be run as root."
msgstr ""

#: lib/disk_utils.py:87
msgid "Failed to retrieve disk list."
msgstr ""

#: lib/disk_utils.py:96
msgid "Failed to detect live media device"
msgstr ""

#: lib/disk_utils.py:101
msgid "Failed to detect root disk"
msgstr ""

#: lib/disk_utils.py:168
msgid "Failed to get disk size."
msgstr ""

#: lib/disk_utils.py:175
msgid "Could not parse disk size."
msgstr ""

#: lib/disk_utils.py:187
msgid "Failed to set GPT label on "
msgstr ""

#: lib/disk_utils.py:191 lib/disk_utils.py:205 lib/disk_utils.py:218
msgid "Failed to create primary partition on "
msgstr ""

#: lib/disk_utils.py:195
msgid "Failed to create EFI partition on "
msgstr ""

#: lib/disk_utils.py:198 lib/disk_utils.py:212
msgid "Failed to set boot flag."
msgstr ""

#: lib/disk_utils.py:201 lib/disk_utils.py:215
msgid "Failed to set MSDOS label on "
msgstr ""

#: lib/disk_utils.py:209
msgid "Failed to create second partition on "
msgstr ""

#: lib/disk_utils.py:232
msgid "Failed to erase "
msgstr ""

#: lib/copy_utils.py:71
msgid "Copying MiniOS files: "
msgstr ""

#: lib/copy_utils.py:73
msgid "Copied file: "
msgstr ""

#: lib/copy_utils.py:80
msgid "Created directory: "
msgstr ""

#: lib/copy_utils.py:101
msgid "Copied EFI file: "
msgstr ""

#: lib/copy_utils.py:243
#, python-brace-format
msgid "Warning: No translations found for {lang}, using English fallback"
msgstr ""

#: lib/copy_utils.py:249
msgid "Error: grub.template.cfg template not found"
msgstr ""

#: lib/copy_utils.py:289
#, python-brace-format
msgid "Using localized theme: {theme}"
msgstr ""

#: lib/copy_utils.py:291
#, python-brace-format
msgid "Localized theme not found for {lang}, using default"
msgstr ""

#: lib/copy_utils.py:297
#, python-brace-format
msgid "Generated localized GRUB config for {lang}"
msgstr ""

#: lib/copy_utils.py:301
#, python-brace-format
msgid "Error generating localized GRUB config: {error}"
msgstr ""

#: lib/copy_utils.py:314
msgid "GRUB directory not found, skipping GRUB boot menu configuration"
msgstr ""

#: lib/copy_utils.py:322
msgid "multilingual menu"
msgstr ""

#: lib/copy_utils.py:326
#, python-brace-format
msgid "Applied {config} GRUB boot menu from {source}"
msgstr ""

#: lib/copy_utils.py:329
#, python-brace-format
msgid ""
"Warning: {config} configuration file not found, keeping original grub.cfg"
msgstr ""

#: lib/copy_utils.py:335
#, python-brace-format
msgid "Generating localized GRUB menu for language: {lang}"
msgstr ""

#: lib/copy_utils.py:338
#, python-brace-format
msgid "Applied {lang} GRUB boot menu"
msgstr ""

#: lib/copy_utils.py:341
#, python-brace-format
msgid "Failed to generate {lang} config, falling back to template"
msgstr ""

#: lib/copy_utils.py:345
msgid "Applied template GRUB boot menu as fallback"
msgstr ""

#: lib/copy_utils.py:347
msgid "Warning: No fallback configuration available, keeping original grub.cfg"
msgstr ""
